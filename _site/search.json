[
  {
    "objectID": "oneliners/molr_2023_06_05.html",
    "href": "oneliners/molr_2023_06_05.html",
    "title": "Accessing the result of the last operation",
    "section": "",
    "text": "Have you ever run a slow chunk of code but neglected to assign the output? Rather that re-running it, there is a hidden variable in RStudio, .Last.value, that always contains the most recent result.\n\nExample\n\nmtcars %&gt;% \n  filter(cyl &gt; 3) %&gt;% \n  select(mpg) %&gt;% \n  summarize(mpg_mean = mean(mpg))\n\n\n\n\n\nmpg_mean\n\n\n\n\n20.09062\n\n\n\n\n\n.Last.value\n\n\n\n\n\nmpg_mean\n\n\n\n\n20.09062\n\n\n\n\n\n\n\n\nMore Info\nThere is an option in RStudio to show .Last.value in the “Environment” tab:\nTools &gt; Global Options &gt; General &gt; Advanced &gt; Show .Last.value in environment listing\n\nEnabling this option will result in this:\n\n\n\nOther Uses\nI use .Last.value in a number of snippets to make it faster to see certain summaries or views of the result:\n\n# Shortcut to get the last value with less typing\nsnippet lv\n    .Last.value\n\n# Use dplyr's glimpse() function to see a summary for data with lots of columns\nsnippet glv\n    glimpse(.Last.value)\n\n# Show the last value in an Excel sheet (requires integral pacakge)\nsnippet xvl\n    xview(.Last.value)\n\n# Show a plot of all values to investigate missingness\nsnippet vd\n    visdat::vis_dat(${1:.Last.value}, warn_large_data = F, sort_type = F, palette = \"qual\")"
  },
  {
    "objectID": "oneliners/molr_2023-03-06.html",
    "href": "oneliners/molr_2023-03-06.html",
    "title": "Vectorized Switch",
    "section": "",
    "text": "dplyr::case_match() is a new function in dplyr 1.1 that works as a vectorized switch(). It is similar to case_when() but is simpler if the value on the left side of your testing formula is the same for all tests. The following are equivalent:\n\nlibrary(dplyr)\n\ncase_when(\n  x %in% c(\"a\", \"b\") ~ 1,\n  x %in% \"c\" ~ 2,\n  x %in% c(\"d\", \"e\") ~ 3\n)\n\ncase_match(\n  x,\n  c(\"a\", \"b\") ~ 1,\n  \"c\" ~ 2,\n  c(\"d\", \"e\") ~ 3\n)"
  },
  {
    "objectID": "oneliners/molr_2023_05_22.html",
    "href": "oneliners/molr_2023_05_22.html",
    "title": "Find Which Package a Function Belongs To",
    "section": "",
    "text": "If you come across reference to a function, but it isn’t clear what package it is from (most often in example code or stack overflow), the sos::findFn() function can help. It will search a database of CRAN packages and return a list of packages that contain a matching function and list them in order of likelihood. Unlike ??, this searches all CRAN packages, not just ones installed on your system.\n\nsos::findFn(\"skim\")\n\nfound 60 matches;  retrieving 3 pages\n2 3 \nDownloaded 44 links in 18 packages.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCount\nMaxScore\nTotalScore\npkgLink\nPackage\nFunction\nDate\nScore\nDescription\nLink\n\n\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nskim\n2023-06-09 21:50:52\n66\nR: Skim a data frame, getting useful summary statistics\nhttps://search.r-project.org/CRAN/refmans/skimr/html/skim.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nto_long\n2023-06-09 21:50:52\n56\nR: Create \"long\" skim output\nhttps://search.r-project.org/CRAN/refmans/skimr/html/to_long.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nfocus\n2023-06-09 21:50:47\n53\nR: Only show a subset of summary statistics after skimming\nhttps://search.r-project.org/CRAN/refmans/skimr/html/focus.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nprint\n2023-06-09 21:50:52\n49\nR: Print ‘skim’ objects\nhttps://search.r-project.org/CRAN/refmans/skimr/html/print.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nskimr-package\n2023-06-09 21:50:52\n46\nR: Skim a data frame\nhttps://search.r-project.org/CRAN/refmans/skimr/html/skimr-package.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nskim-attr\n2023-06-09 21:50:52\n43\nR: Functions for accessing skim_df attributes\nhttps://search.r-project.org/CRAN/refmans/skimr/html/skim-attr.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nsummary.skim_df\n2023-06-09 21:50:52\n42\nR: Summary function for skim_df\nhttps://search.r-project.org/CRAN/refmans/skimr/html/summary.skim_df.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nskim_with\n2023-06-09 21:50:52\n37\nR: Set or add the summary functions for a particular type of…\nhttps://search.r-project.org/CRAN/refmans/skimr/html/skim_with.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nskim-obj\n2023-06-09 21:50:52\n36\nR: Test if an object is compatible with ‘skimr’\nhttps://search.r-project.org/CRAN/refmans/skimr/html/skim-obj.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nmutate.skim_df\n2023-06-09 21:50:47\n32\nR: Mutate a skim_df\nhttps://search.r-project.org/CRAN/refmans/skimr/html/mutate.skim_df.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\n00Index\n2023-06-09 21:50:47\n26\nR: Compact and Flexible Summaries of Data\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\ndeprecated-v1\n2023-06-09 21:50:47\n25\nR: Deprecated functions from skimr v1\nhttps://search.r-project.org/CRAN/refmans/skimr/html/deprecated-v1.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\npartition\n2023-06-09 21:50:48\n25\nR: Separate a big ‘skim_df’ into smaller data frames, by type.\nhttps://search.r-project.org/CRAN/refmans/skimr/html/partition.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nget_skimmers\n2023-06-09 21:50:47\n24\nR: Retrieve the summary functions for a specific data type\nhttps://search.r-project.org/CRAN/refmans/skimr/html/get_skimmers.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nsfl\n2023-06-09 21:50:52\n21\nR: Create a skimr function list\nhttps://search.r-project.org/CRAN/refmans/skimr/html/sfl.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nget_default_skimmers\n2023-06-09 21:50:47\n15\nR: View default skimmer names and functions\nhttps://search.r-project.org/CRAN/refmans/skimr/html/get_default_skimmers.html\n\n\n17\n66\n608\nhttps://search.r-project.org/CRAN/refmans/skimr/html/00Index.html\nskimr\nstats\n2023-06-09 21:50:52\n12\nR: Summary statistic functions\nhttps://search.r-project.org/CRAN/refmans/skimr/html/stats.html\n\n\n5\n73\n134\nhttps://search.r-project.org/CRAN/refmans/codebook/html/00Index.html\ncodebook\nskim_codebook\n2023-06-09 23:40:09\n73\nR: Skim codebook\nhttps://search.r-project.org/CRAN/refmans/codebook/html/skim_codebook.html\n\n\n5\n73\n134\nhttps://search.r-project.org/CRAN/refmans/codebook/html/00Index.html\ncodebook\ncodebook_table\n2023-06-09 23:40:09\n16\nR: Codebook metadata table\nhttps://search.r-project.org/CRAN/refmans/codebook/html/codebook_table.html\n\n\n5\n73\n134\nhttps://search.r-project.org/CRAN/refmans/codebook/html/00Index.html\ncodebook\nget_skimmers.haven_labelled\n2023-06-09 23:40:09\n16\nR: Define skimmers for haven_labelled variables\nhttps://search.r-project.org/CRAN/refmans/codebook/html/get_skimmers.haven_labelled.html\n\n\n5\n73\n134\nhttps://search.r-project.org/CRAN/refmans/codebook/html/00Index.html\ncodebook\nget_skimmers.haven_labelled_spss\n2023-06-09 23:40:09\n16\nR: Define skimmers for haven_labelled_spss variables\nhttps://search.r-project.org/CRAN/refmans/codebook/html/get_skimmers.haven_labelled_spss.html\n\n\n5\n73\n134\nhttps://search.r-project.org/CRAN/refmans/codebook/html/00Index.html\ncodebook\n00Index\n2023-06-09 23:40:08\n13\nR: Automatic Codebooks from Metadata Encoded in Dataset Attributes\nhttps://search.r-project.org/CRAN/refmans/codebook/html/00Index.html\n\n\n3\n13\n38\nhttps://search.r-project.org/CRAN/refmans/NIMAA/html/00Index.html\nNIMAA\nnominalAsBinet\n2023-06-10 00:24:37\n13\nR: Convert nominal data to a bipartite network\nhttps://search.r-project.org/CRAN/refmans/NIMAA/html/nominalAsBinet.html\n\n\n3\n13\n38\nhttps://search.r-project.org/CRAN/refmans/NIMAA/html/00Index.html\nNIMAA\nplotIncMatrix\n2023-06-10 00:24:43\n13\nR: Plot the incidence matrix.\nhttps://search.r-project.org/CRAN/refmans/NIMAA/html/plotIncMatrix.html\n\n\n3\n13\n38\nhttps://search.r-project.org/CRAN/refmans/NIMAA/html/00Index.html\nNIMAA\nextractSubMatrix\n2023-06-10 00:24:37\n12\nR: Extract the non-missing submatrices from a given matrix.\nhttps://search.r-project.org/CRAN/refmans/NIMAA/html/extractSubMatrix.html\n\n\n2\n75\n95\nhttps://search.r-project.org/CRAN/refmans/liver/html/00Index.html\nliver\nskim\n2023-06-09 21:34:58\n75\nR: Skim a data frame to get useful summary statistics\nhttps://search.r-project.org/CRAN/refmans/liver/html/skim.html\n\n\n2\n75\n95\nhttps://search.r-project.org/CRAN/refmans/liver/html/00Index.html\nliver\n00Index\n2023-06-09 21:34:57\n20\nR: \"Eating the Liver of Data Science\"\nhttps://search.r-project.org/CRAN/refmans/liver/html/00Index.html\n\n\n2\n69\n75\nhttps://search.r-project.org/CRAN/refmans/wpa/html/00Index.html\nwpa\nmeeting_skim\n2023-06-09 23:34:28\n69\nR: Produce a skim summary of meeting hours\nhttps://search.r-project.org/CRAN/refmans/wpa/html/meeting_skim.html\n\n\n2\n69\n75\nhttps://search.r-project.org/CRAN/refmans/wpa/html/00Index.html\nwpa\n00Index\n2023-06-09 23:34:17\n6\nR: Tools for Analysing and Visualising Viva Insights Data\nhttps://search.r-project.org/CRAN/refmans/wpa/html/00Index.html\n\n\n2\n44\n58\nhttps://search.r-project.org/CRAN/refmans/mdsr/html/00Index.html\nmdsr\nskim\n2023-06-09 22:21:34\n44\nR: Custom skimmer\nhttps://search.r-project.org/CRAN/refmans/mdsr/html/skim.html\n\n\n2\n44\n58\nhttps://search.r-project.org/CRAN/refmans/mdsr/html/00Index.html\nmdsr\n00Index\n2023-06-09 22:20:30\n14\nR: Complement to ‘Modern Data Science with R’\nhttps://search.r-project.org/CRAN/refmans/mdsr/html/00Index.html\n\n\n2\n18\n34\nhttps://search.r-project.org/CRAN/refmans/REDCapTidieR/html/00Index.html\nREDCapTidieR\nskim_data\n2023-06-09 23:29:47\n18\nR: Apply applicable skimmers to data\nhttps://search.r-project.org/CRAN/refmans/REDCapTidieR/html/skim_data.html\n\n\n2\n18\n34\nhttps://search.r-project.org/CRAN/refmans/REDCapTidieR/html/00Index.html\nREDCapTidieR\nadd_skimr_metadata\n2023-06-09 23:29:47\n16\nR: Add skimr metrics to a supertibble’s metadata\nhttps://search.r-project.org/CRAN/refmans/REDCapTidieR/html/add_skimr_metadata.html\n\n\n1\n22\n22\nhttps://search.r-project.org/CRAN/refmans/MedDietCalc/html/00Index.html\nMedDietCalc\nnutriSample\n2023-06-09 19:17:11\n22\nR: Sample from a nutriepidemiological study\nhttps://search.r-project.org/CRAN/refmans/MedDietCalc/html/nutriSample.html\n\n\n1\n18\n18\nhttps://search.r-project.org/CRAN/refmans/jot/html/00Index.html\njot\njot_skim\n2023-06-09 19:14:56\n18\nR: Read in all values from a jot notepad\nhttps://search.r-project.org/CRAN/refmans/jot/html/jot_skim.html\n\n\n1\n16\n16\nhttps://search.r-project.org/CRAN/refmans/anacor/html/00Index.html\nanacor\nbitterling\n2023-06-10 00:14:32\n16\nR: Bitterling\nhttps://search.r-project.org/CRAN/refmans/anacor/html/bitterling.html\n\n\n1\n16\n16\nhttps://search.r-project.org/CRAN/refmans/emmeans/html/00Index.html\nemmeans\npigs\n2023-06-09 18:52:57\n16\nR: Effects of dietary protein on free plasma leucine…\nhttps://search.r-project.org/CRAN/refmans/emmeans/html/pigs.html\n\n\n1\n16\n16\nhttps://search.r-project.org/CRAN/refmans/tidyREDCap/html/00Index.html\ntidyREDCap\ndrop_labels\n2023-06-09 22:53:43\n16\nR: Drop all the labels from a variable\nhttps://search.r-project.org/CRAN/refmans/tidyREDCap/html/drop_labels.html\n\n\n1\n15\n15\nhttps://search.r-project.org/CRAN/refmans/lares/html/00Index.html\nlares\ndf_str\n2023-06-09 22:18:12\n15\nR: Dataset columns and rows structure\nhttps://search.r-project.org/CRAN/refmans/lares/html/df_str.html\n\n\n1\n14\n14\nhttps://search.r-project.org/CRAN/refmans/broom/html/00Index.html\nbroom\nsummary_tidiers\n2023-06-09 22:57:36\n14\nR: (Deprecated) Tidy summaryDefault objects\nhttps://search.r-project.org/CRAN/refmans/broom/html/summary_tidiers.html\n\n\n1\n12\n12\nhttps://search.r-project.org/CRAN/refmans/rapport/html/00Index.html\nrapport\nrapport-package\n2023-06-09 21:16:45\n12\nR: rapport: an R engine for reproducible template generation\nhttps://search.r-project.org/CRAN/refmans/rapport/html/rapport-package.html\n\n\n1\n10\n10\nhttps://search.r-project.org/CRAN/refmans/modelsummary/html/00Index.html\nmodelsummary\ndatasummary_skim\n2023-06-09 21:02:13\n10\nR: Quick overview of numeric or categorical variables\nhttps://search.r-project.org/CRAN/refmans/modelsummary/html/datasummary_skim.html\n\n\n1\n4\n4\nhttps://search.r-project.org/CRAN/refmans/vtable/html/00Index.html\nvtable\nsumtable\n2023-06-09 23:00:33\n4\nR: Summary Table Function\nhttps://search.r-project.org/CRAN/refmans/vtable/html/sumtable.html\n\n\n1\n2\n2\nhttps://search.r-project.org/CRAN/refmans/bipartite/html/00Index.html\nbipartite\nbipartite-package\n2023-06-09 21:53:08\n2\nR: Analysis of bipartite ecological webs\nhttps://search.r-project.org/CRAN/refmans/bipartite/html/bipartite-package.html"
  },
  {
    "objectID": "oneliners/molr_2023-03-27.html",
    "href": "oneliners/molr_2023-03-27.html",
    "title": "ggplot Formatting Assistant with Natural Language Queries",
    "section": "",
    "text": "Despite having used ggplot for well over a decade, I still find myself forgetting some of the functions and arguments for modifying the formatting. There are just so many. As a result I’m often stuck googling simple things like how to rotate the x axis labels (I have even built some custom snippets for things I do often enough to be worth creating the snippet, but not often enough to remember the exact syntax, more on this at the end)."
  },
  {
    "objectID": "oneliners/molr_2023-03-27.html#gghelp-examples",
    "href": "oneliners/molr_2023-03-27.html#gghelp-examples",
    "title": "ggplot Formatting Assistant with Natural Language Queries",
    "section": "gghelp Examples",
    "text": "gghelp Examples\n\nlibrary(ggx)\n\ngghelp(\"How do I rotate the x-axis\")\n\ntheme(axis.text.x = element_text(angle = 90) \n\ngghelp(\"How do I remove the legend?\")\n\ntheme(legend.position = \"none\")"
  },
  {
    "objectID": "oneliners/molr_2023-03-27.html#its-not-perfect",
    "href": "oneliners/molr_2023-03-27.html#its-not-perfect",
    "title": "ggplot Formatting Assistant with Natural Language Queries",
    "section": "It’s Not Perfect",
    "text": "It’s Not Perfect\nIt works better for some questions than others of course:\n\n#Error\ntry(gghelp(\"How do I change the opacity of the fill color?\")) \n\nError in dictionary[[best_match_index]][[2]] : subscript out of bounds\n\n#Weird suggestion for modifying questions\ngghelp(\"How do I set the opacity of the fill color to 50%?\") \n\nWarning in gghelp(\"How do I set the opacity of the fill color to 50%?\"): There\nseems to be a color missing in your request!\n\n#Bad answer\ngghelp(\"How do I change the fill color to red?\") \n\ntheme(plot.title=element_text(color='red')) \n\n#Answer is specific to the x-axis tile, but question wasn't clear about what font size so that's understandable\ngghelp(\"How do I change the font size?\") \n\ntheme(axis.title.x=element_text(size=rel(2))) \n\n#Good feedback, it wants a value so that the returned code is complete.\ngghelp(\"How do I change the font size of the title?\") \n\nWarning in gghelp(\"How do I change the font size of the title?\"): There seems\nto be a number missing in your request.\n\ngghelp(\"How do I change the font size of the title to 14?\")\n\ntheme(title=element_text(size=14))"
  },
  {
    "objectID": "oneliners/molr_2023-03-27.html#warning",
    "href": "oneliners/molr_2023-03-27.html#warning",
    "title": "ggplot Formatting Assistant with Natural Language Queries",
    "section": "Warning",
    "text": "Warning\nggx also has a function, gg_() that can be used in the ggplot() chain to accomplish the goal without using the actual code. It essentially uses the code suggested by gghelp() for the same query in the actual ggplot() chain. I DO NOT recommend using this feature, as it is bad practice and may not be replicable down the road. You also do not want future users of your script to have to install ggx. In fact, I would recommend that you not load the library in your script, but rather only use it interactively.\n\nlibrary(ggplot2)\n\nggplot(data=iris, \n       mapping=aes(x=Sepal.Length, \n                  y=Petal.Length, color=Species))+\n  geom_point()+\n  gg_(\"hide legend\")"
  },
  {
    "objectID": "oneliners/molr_2023-03-27.html#about-snippets",
    "href": "oneliners/molr_2023-03-27.html#about-snippets",
    "title": "ggplot Formatting Assistant with Natural Language Queries",
    "section": "About Snippets",
    "text": "About Snippets\nIf you haven’t used snippets, they are a way of defining a text shortcut that will tab-autocomplete to the code defined below the shortcut. You can add/edit them in Global Options &gt; Code &gt; Edit Snippets"
  },
  {
    "objectID": "oneliners/molr_2023-03-20.html",
    "href": "oneliners/molr_2023-03-20.html",
    "title": "Separating and Combining Columns",
    "section": "",
    "text": "Sometimes you may have columns in your data that you want to combine into a single column, or a single column that you want to split into multiple columns. These complementary functions are a simple way of doing so.\n\n#library(tidyverse, quietly = T)\nlibrary(tibble)\nlibrary(tidyr)\n\npeople &lt;-\n  enframe(\n    c(\n      \"Jarred Prosacco\",\n      \"Donnell Jacobs\",\n      \"Cecily Schultz\",\n      \"Boyd Stark\",\n      \"Alverda Nolan\",\n      \"Bose Kling\",\n      \"Buel Nikolaus\",\n      \"Adell Gislason\",\n      \"Theadore Johnson\",\n      \"Raynard Huel\"\n    ),\n    name = NULL,\n    value = \"name\"\n  )\n\npeople\n\n\n\n\n\nname\n\n\n\n\nJarred Prosacco\n\n\nDonnell Jacobs\n\n\nCecily Schultz\n\n\nBoyd Stark\n\n\nAlverda Nolan\n\n\nBose Kling\n\n\nBuel Nikolaus\n\n\nAdell Gislason\n\n\nTheadore Johnson\n\n\nRaynard Huel\n\n\n\n\n\npeople_sep &lt;- people %&gt;% \n  separate_wider_delim(name, delim = \" \", names = c(\"first\", \"last\"))\n\npeople_sep \n\n\n\n\n\nfirst\nlast\n\n\n\n\nJarred\nProsacco\n\n\nDonnell\nJacobs\n\n\nCecily\nSchultz\n\n\nBoyd\nStark\n\n\nAlverda\nNolan\n\n\nBose\nKling\n\n\nBuel\nNikolaus\n\n\nAdell\nGislason\n\n\nTheadore\nJohnson\n\n\nRaynard\nHuel\n\n\n\n\n\npeople_sep %&gt;% \n  unite(col = last_first, last, first, sep = \", \") \n\n\n\n\n\nlast_first\n\n\n\n\nProsacco, Jarred\n\n\nJacobs, Donnell\n\n\nSchultz, Cecily\n\n\nStark, Boyd\n\n\nNolan, Alverda\n\n\nKling, Bose\n\n\nNikolaus, Buel\n\n\nGislason, Adell\n\n\nJohnson, Theadore\n\n\nHuel, Raynard\n\n\n\n\n\n\nSee also:\n\ntidyr::separate_longer_*() for separating column values into multiple rows\ndplyr::coalesce() for finding the first non-missing value from two or more columns"
  },
  {
    "objectID": "oneliners/molr_2023-01-30.html",
    "href": "oneliners/molr_2023-01-30.html",
    "title": "Get Feedback on Tidyverse Operations",
    "section": "",
    "text": "You’ve probably spent significant time looking at the results of join, filter, or mutate operations to be sure you got what you expected. There is a nice helper package, tidylog, which provides immediate feedback on what changed. It wraps the common dplyr functions by masking them with functions of the same name. Under the hood the dplyr functions are still being used and will produce the same output, but the there is additional info printed to the screen about what happened during the join."
  },
  {
    "objectID": "oneliners/molr_2023-01-30.html#filtering-or-mutating",
    "href": "oneliners/molr_2023-01-30.html#filtering-or-mutating",
    "title": "Get Feedback on Tidyverse Operations",
    "section": "Filtering or Mutating",
    "text": "Filtering or Mutating\ntidylog will give you feedback, for instance when filtering a data frame or adding a new variable:\n\nfiltered &lt;- filter(mtcars, cyl == 4)\n\nfilter: removed 21 rows (66%), 11 rows remaining\n\nmutated &lt;- mutate(mtcars, new_var = wt ** 2)\n\nmutate: new variable 'new_var' (double) with 29 unique values and 0% NA"
  },
  {
    "objectID": "oneliners/molr_2023-01-30.html#joining",
    "href": "oneliners/molr_2023-01-30.html#joining",
    "title": "Get Feedback on Tidyverse Operations",
    "section": "Joining",
    "text": "Joining\ntidylog also reports detailed information for joins:\n\njoined &lt;- left_join(nycflights13::flights, nycflights13::weather,\n    by = c(\"year\", \"month\", \"day\", \"origin\", \"hour\", \"time_hour\"))\n\nleft_join: added 9 columns (temp, dewp, humid, wind_dir, wind_speed, …)\n\n\n           &gt; rows only in x     1,556\n\n\n           &gt; rows only in y  (  6,737)\n\n\n           &gt; matched rows     335,220\n\n\n           &gt;                 =========\n\n\n           &gt; rows total       336,776\n\n\nIn this case, we see that 1,556 rows from the flights dataset do not have weather information."
  },
  {
    "objectID": "oneliners/molr_2023-01-30.html#pipes",
    "href": "oneliners/molr_2023-01-30.html#pipes",
    "title": "Get Feedback on Tidyverse Operations",
    "section": "Pipes",
    "text": "Pipes\ntidylog can be especially helpful in longer pipes:\n\nsummary &lt;- mtcars %&gt;%\n  select(mpg, cyl, hp, am) %&gt;%\n  filter(mpg &gt; 15) %&gt;%\n  mutate(mpg_round = round(mpg)) %&gt;%\n  group_by(cyl, mpg_round, am) %&gt;%\n  tally() %&gt;%\n  filter(n &gt;= 1)\n\nselect: dropped 7 variables (disp, drat, wt, qsec, vs, …)\n\n\nfilter: removed 6 rows (19%), 26 rows remaining\n\n\nmutate: new variable 'mpg_round' (double) with 15 unique values and 0% NA\n\n\ngroup_by: 3 grouping variables (cyl, mpg_round, am)\n\n\ntally: now 20 rows and 4 columns, 2 group variables remaining (cyl, mpg_round)\n\n\nfilter (grouped): no rows removed\n\n\nHere, it might have been accidental that the last filter command had no effect, or it might tell us that something we thought was affecting our data actually wasn’t, hopefully leading us to track down why."
  },
  {
    "objectID": "oneliners/molr_2023_06_12_ggnewscale.html",
    "href": "oneliners/molr_2023_06_12_ggnewscale.html",
    "title": "Add a second color scale for the same ggplot aesthetic",
    "section": "",
    "text": "There can be cases where you need to specify two different scales for the same aesthetic in a ggplot (for instance you want viridis for the color aesthetic of one set of points, and rainbow for the color aesthetic of a second set of poitns). ggplot2 won’t allow two different scales for the same aesthetic - it will throw a warning and only use the most recent definition. The ggnewscale package provides a simple solution to this.\n\nExample\nFrom the ggnewscale documentation:\n\nlibrary(ggplot2)\nlibrary(ggnewscale) #install.packages(\"ggnewscale\")\n# Equivalent to melt(volcano)\ntopography &lt;- expand.grid(x = 1:nrow(volcano),\n                          y = 1:ncol(volcano))\ntopography$z &lt;- c(volcano)\n\n# point measurements of something at a few locations\nset.seed(42)\nmeasurements &lt;- data.frame(x = runif(30, 1, 80),\n                           y = runif(30, 1, 60),\n                           thing = rnorm(30))\n\nggplot(mapping = aes(x, y)) +\n  geom_contour(data = topography, aes(z = z, color = after_stat(level))) +\n  # Color scale for topography\n  scale_color_viridis_c(option = \"D\") +\n  # geoms below will use another color scale\n  new_scale_color() +\n  geom_point(data = measurements, size = 3, aes(color = thing)) +\n  # Color scale applied to geoms added after new_scale_color()\n  scale_color_viridis_c(option = \"A\")"
  },
  {
    "objectID": "oneliners.html",
    "href": "oneliners.html",
    "title": "Monday OneLineRs",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nAdd a second color scale for the same ggplot aesthetic\n\n\nggnewscale::new_scale()\n\n\n\n\n\n\nMonday, June 12, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\n\n\nAccessing the result of the last operation\n\n\n.Last.value\n\n\n\n\n\n\nMonday, June 5, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\n\n\nFind Which Package a Function Belongs To\n\n\nsos::findFn\n\n\n\n\n\n\nMonday, May 22, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\n\n\nggplot Formatting Assistant with Natural Language Queries\n\n\nggx::gghelp()\n\n\n\n\n\n\nMonday, March 27, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\n\n\nSeparating and Combining Columns\n\n\ntidyr::separate_wider_*() and tidyr::unite()\n\n\n\n\n\n\nMonday, March 20, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\n\n\nVectorized Switch\n\n\ndplyr::case_match()\n\n\n\n\n\n\nMonday, March 6, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\n\n\nGet Feedback on Tidyverse Operations\n\n\ntidylog\n\n\n\n\n\n\nMonday, January 30, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Monday OneLineRs & Tech Roundup",
    "section": "",
    "text": "Monday OneLineRs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNew Tech Roundup\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site is a compendium of Monday OneLineR’s and Month Tech Roundups."
  },
  {
    "objectID": "techroundup.html",
    "href": "techroundup.html",
    "title": "New Tech Roundup",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nYouTube: Shiny Workshop - Create Your Own Hydrological Data App\n\n\n\n\n\n\n\n\n\nWednesday, May 17, 2023\n\n\nJonathan Zadra\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "techroundup/tech_2023_05_17.html",
    "href": "techroundup/tech_2023_05_17.html",
    "title": "YouTube: Shiny Workshop - Create Your Own Hydrological Data App",
    "section": "",
    "text": "YouTube Link"
  }
]